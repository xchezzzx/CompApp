@page "/competitions"
@using BlazorWeb.Interfaces;
@using BlazorWeb.Models.DataTransferModels;
@using BlazorWeb.Services;
@using Microsoft.AspNetCore.SignalR.Client;
@inject ICompetitionService CompetitionService

<PageTitle>Competition page</PageTitle>

<div class="row">
    <div class="col-10 text-center align-content-center">
	    <h1>Competitions</h1>
    </div>
    <div class="col-2 text-end">
    <a  class="btn btn-primary"
        href="/competitions/add"
        role="button">
		<span class="oi oi-plus" aria-hidden="true"></span>
		<span>&nbsp;Add competiton</span>
    </a>
    </div>
</div>



@if (users == null)
{
    <div class="text-center">
        <img src="./images/loading-waiting.gif"/>
    </div>
}
else
{
<div class="table-responsive">
    <table class="table table-striped">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Date of competition</th>
				<th>Start Time</th>
                <th>End Time</th>
				<th>Duration</th>
                <th>Number of Concurrent Tasks</th>
                <th>Event Twitter Hashtag</th>
            </tr>
        </thead>
        <tbody>
                @foreach (var item in users)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.StartDateTime.ToLongDateString()</td>
					<td>@item.StartDateTime.ToString("t")</td>
                    <td>@item.EndDateTime.ToString("t")</td>
					<td>@item.Duration.ToString("%h") hour(s)</td>
                    <td>@item.NumberConcTasks</td>
                    <td>
                        <a href="https://twitter.com/search?q=@item.Hashtag&src=trend_click&vertical=trends" target="_blank">
                            @item.Hashtag
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="row">
    <div class="col text-center">
            <button class="btn btn-success" @onclick="fetchData">
                <span class="oi oi-loop-circular" aria-hidden="true"></span>
                <span>&nbsp;Refresh List</span>
        </button>
    </div>
</div>
}


@code {
    //[Parameter]
    //public string Message { get; set; }
    string messageFromServer = String.Empty;
    List<CompetitionDT> users = new List<CompetitionDT>();


    protected override async Task OnInitializedAsync()
    {
        users = await CompetitionService.GetAllCompetitionsAsync();
        
    }

    public async Task fetchData()
    {
        await CompetitionService.GetAllCompetitionsAsync();
    }

    

    
}
