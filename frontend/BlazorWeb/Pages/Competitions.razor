@page "/competitions"
@using BlazorWeb.Models.DataTransferModels;
@using Microsoft.AspNetCore.SignalR.Client;
@inject HttpClient Http

<PageTitle>Competition page</PageTitle>

<div class="row">
    <div class="col-10 text-center align-content-center">
	    <h1>Competitions</h1>
    </div>
    <div class="col-2 text-end">
    <a  class="btn btn-primary"
        href="/competitions/add"
        role="button">
		<span class="oi oi-plus" aria-hidden="true"></span>
		<span>&nbsp;Add competiton</span>
    </a>
    </div>
</div>



@if (flag == false)
{
    <div class="text-center">
        <img src="./images/loading-waiting.gif"/>
    </div>
}
else
{
<div class="table-responsive">
    <table class="table table-striped">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Date of competition</th>
				<th>Start Time</th>
                <th>End Time</th>
				<th>Duration</th>
                <th>Number of Concurrent Tasks</th>
                <th>Event Twitter Hashtag</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in users)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.CompetitionName</td>
                    <td>@item.StartTime.ToLongDateString()</td>
					<td>@item.StartTime.ToString("t")</td>
                    <td>@item.EndTime.ToString("t")</td>
					<td>@item.Duration.ToString("%h") hour(s)</td>
                    <td>@item.NumberConcTasks</td>
                    <td>
                        <a href="https://twitter.com/search?q=@item.Hashtag&src=trend_click&vertical=trends" target="_blank">
                            @item.Hashtag
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="row">
    <div class="col text-center">
        <button class="btn btn-success" @onclick="fetchData">
                <span class="oi oi-loop-circular" aria-hidden="true"></span>
                <span>&nbsp;Refresh List</span>
        </button>
    </div>
</div>
}

@code {
    //[Parameter]
    //public string Message { get; set; }
    //string message;
    List<CompetitionDT> users;
    bool flag = false;

    protected override async Task OnInitializedAsync()
    {
        await fetchData();
    }

	public async Task fetchData()
	{
        flag = false;

		HubConnection connection = new HubConnectionBuilder()
				.WithUrl("https://localhost:7206/competitions")
				.WithAutomaticReconnect()
				.Build();

        connection.On<List<CompetitionDT>>("Send", msg =>
		{
			users = msg;
			flag = true;
		});
		await connection.StartAsync();

        await connection.InvokeAsync("SendCompetitions");

	}
}
