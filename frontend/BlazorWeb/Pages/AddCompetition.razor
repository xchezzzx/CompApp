@page "/competitions/add"

<div>
	<div class="row mb-5">
		<h3>Adding new competition:</h3>
	</div>


	@if (!flag)
	{
		<div class="row">
			<div class="col-6 offset-1">
				<form>

					@*competition name*@
					<div class="row mb-4">
						<label for="inputCompName" class="col-sm-3 col-form-label">Name</label>
						<div class="col-sm-9">
							<input type="text"
							   class="form-control"
							   id="inputCompName"
							   placeholder="Enter competition name"
							   @bind="newCompetitionName" />
						</div>
					</div>

					@*competition date*@
					<div class="row mb-4">
						<label for="inputCompDate" class="col-sm-3 col-form-label">Date</label>
						<div class="col-sm-9">
							<input type="date"
							   class="form-control"
							   id="inputCompDate"
							   @bind="newCompetitionDate" />
						</div>
					</div>

					<div class="row mb-4">
						<label for="inputStartTime" class="col-sm-3 col-form-label">Start time</label>
						<div class="col-sm-9">
							<input type="time"
							   class="form-control"
							   id="inputStartTime"
							   @bind="newCompetitionStartTime" />
							<div id="emailHelp" class="form-text">Enter competition start time</div>
						</div>
					</div>

					<div class="row mb-1">
						<label for="inputEndTime" class="col-sm-3 col-form-label">End time</label>
						<div class="col-sm-9">
							<input type="time"
							   class="form-control"
							   id="inputEndTime"
							   @bind="newCompetitionEndTime" />
							<div id="emailHelp" class="form-text">
								Enter competition end time
							</div>
						</div>
					</div>

					<div class="row mb-1">
						<div class="col-sm-9 offset-3 text-center">
							or
						</div>
					</div>

					<div class="row mb-4">
						<label for="inputDuration" class="col-sm-3 col-form-label">Duration</label>
						<div class="col-sm-9">
							<input type="number"
							   class="form-control"
							   id="inputDuration"
							   @bind="newCompetitionDurationInt">
							<div id="emailHelp" class="form-text">Enter duration of the event in hours</div>
						</div>
					</div>

					<div class="row mb-4">
						<label for="customRange3" class="col-sm-3 col-form-label">Concurrent tasks</label>
						<div class="col-sm-9">
							<select class="form-select"
								aria-label="Default select example"
								@bind="newCompetitionNumberConcTasks">
								<option selected>Choose from 1 to 5</option>
								<option value="1">1</option>
								<option value="2">2</option>
								<option value="3">3</option>
								<option value="4">4</option>
								<option value="5">5</option>
							</select>
							<div id="emailHelp" class="form-text">Choose amount of concurrent tasks</div>
						</div>
						@*<input type="range" class="form-range" min="1" max="6" step="1" id="customRange3">*@
					</div>

					<div class="row mb-4">
						<label for="inputHashtag" class="col-sm-3 col-form-label">Hashtag</label>
						<div class="col-sm-9">
							<div class="input-group">
								<span class="input-group-text">#</span>
								<input type="text"
								   class="form-control"
								   id="inputHashtag"
								   placeholder="hashtag"
								   @bind-value="newCompetitionHashtag">

							</div>
							<div id="HashtagHelp" class="form-text">Enter the competition hashtag for Twitter</div>
						</div>
					</div>

					@*submit button*@

					<div class="row mb-4">
						<div class="col-sm-6 offset-3">
							<button type="submit" class="btn btn-primary" @onclick="sendNewCompetition">Add competition</button>
							<button type="button" class="btn btn-info" @onclick="AddNewCompetition">Print</button>
							<button type="reset" class="btn btn-danger">Clear fields</button>
						</div>
					</div>

					@*					<label for="submitBtn" class="col-sm-3 col-form-label">Add competition</label>
				<input type="submit" id="submitBtn" class="btn btn-primary text-end" />
				*@
				</form>
			</div>
		</div>
	}
	else
	{
		<h3>@messageFromServer</h3>
	}
</div>

<div class="row">
	<div class="col-6">
		<button class="btn btn-primary" @onclick="sendNewCompetition">Add competition</button>

	</div>
</div>

<div class="row">
	<div class="col-9">
		@if (newCompetition != null)
		{
			<div class="table-responsive">
				<table class="table table-striped table-hover table-sm text-center">
					<thead class="table-light">
						<tr>
							<th>Name</th>
							<th>Date</th>
							<th>Start Time</th>
							<th>End Time</th>
							<th>Duration</th>
							<th>Tasks</th>
							<th>Event Twitter Hashtag</th>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>@newCompetition.CompetitionName</td>
							<td>@newCompetition.StartTime.ToLongDateString()</td>
							<td>@newCompetition.StartTime.ToString("t")</td>
							<td>@newCompetition.EndTime.ToString("t")</td>
							<td>@newCompetition.Duration.ToString("%h") hour(s)</td>
							<td>@newCompetition.NumberConcTasks</td>
							<td>@newCompetition.Hashtag</td>

						</tr>
					</tbody>
				</table>
			</div>
		}

	</div>
</div>

@code {

	string newCompetitionName;
	DateOnly newCompetitionDate;
	TimeOnly newCompetitionStartTime;
	TimeOnly newCompetitionEndTime;
	TimeSpan newCompetitionDuration;
	int newCompetitionDurationInt;
	int newCompetitionNumberConcTasks;
	string newCompetitionHashtag;

	string messageFromServer = string.Empty;
	bool flag = false;


	CompetitionDT newCompetition = null;

	protected override async Task OnInitializedAsync()
	{
		newCompetitionName = "Zionet Hakathon";
		newCompetitionDate = DateOnly.FromDateTime(DateTime.Now);
		newCompetitionStartTime = new TimeOnly(9, 0);
		newCompetitionEndTime = new TimeOnly(20, 0);
		newCompetitionDuration = newCompetitionEndTime - newCompetitionStartTime;
		newCompetitionDurationInt = newCompetitionDuration.Hours;
		newCompetitionNumberConcTasks = 1;
		newCompetitionHashtag = "fuckdotnet";
	}


	public void AddNewCompetition()
	{
		newCompetitionDuration = TimeSpan.FromHours(newCompetitionDurationInt);

		newCompetition = new CompetitionDT()
			{
				Id = null,
				CompetitionName = newCompetitionName,
				StartTime = newCompetitionDate.ToDateTime(newCompetitionStartTime),
				EndTime = newCompetitionDate.ToDateTime(newCompetitionEndTime),
				Duration = newCompetitionDuration,
				NumberConcTasks = newCompetitionNumberConcTasks,
				Hashtag = newCompetitionHashtag
			};
	}

	public void PrintComp()
	{
		AddNewCompetition();
	}

	public async Task sendNewCompetition()
	{
		AddNewCompetition();

		HubConnection connection = new HubConnectionBuilder()
				.WithUrl("http://localhost:5045/competitions")
				.WithAutomaticReconnect()
				.Build();

		connection.On<string>("Add", msg =>
		{
			messageFromServer = msg;
			flag = true;
		});

		await connection.StartAsync();
		await connection.InvokeAsync("AddCompetition", newCompetition);
		await connection.DisposeAsync();
	}
}
