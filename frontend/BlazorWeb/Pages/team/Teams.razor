@page "/teams"
@attribute [Authorize]

@using BlazorWeb.Interfaces;
@using BlazorWeb.Models.DataTransferModels;
@using BlazorWeb.Services;
@using Microsoft.AspNetCore.SignalR.Client;

<PageTitle>Teams page</PageTitle>

<div class="row">

	<div class="col-9 text-center">
		<h1>Teams</h1>
	</div>

	<div class="col-3">
		<div class="d-grid gap-2 d-md-flex justify-content-md-end">
			<button class="btn btn-success" @onclick="fetchData">
				<span class="oi oi-loop-circular" aria-hidden="true"></span>
				<span>&nbsp;Refresh List</span>
			</button>
			<a class="btn btn-primary"
			   href="/teams/add"
			   role="button">
				<span class="oi oi-plus" aria-hidden="true"></span>
				<span>&nbsp;Add team</span>
			</a>
		</div>
	</div>

</div>

@if (!_dataFetched)
{
	<div class="text-center">
		<img src="./images/loading-waiting.gif" />
	</div>
}
else
{
	@if (teams.Count == 0)
	{
		<div class="text-center">
			<h4>
				Sorry, the list is empty
			</h4>
			<img src="./images/empty.gif" />
		</div>
	}
	else
	{
		<div class="table-responsive">
			<table class="table table-striped text-center table-hover">
				<thead class="table-light">
					<tr>
						<th>ID</th>
						<th>Team name</th>
						<th>Pic</th>
						<th>Points</th>
						<th>Created at</th>
						<th>Created by</th>
						<th>Updated at</th>
						<th>Updated by</th>
						<th>Status</th>
					</tr>
				</thead>

				<tbody>

					@foreach (var team in teams)
					{
						<tr>
							<td>@team.Id</td>
							<td><a href="teams/@team.Id">@team.Name</a></td>
							<td>@team.Icon</td>
							<td>@team.SumPoints</td>
							<td>@team.CreateDate.ToString("G")</td>
							<td>@team.CreateUserId</td>
							<td>@team.UpdateDate.ToString("G")</td>
							<td>@team.UpdateUserId</td>
							<td>@((Status)team.StatusId)</td>
						</tr>
					}

				</tbody>
			</table>
		</div>
	}
}


@code {

	List<TeamDT> teams = new List<TeamDT>();

	private bool _dataFetched;


	////[Parameter]
	////public string Message { get; set; }
	//string messageFromServer = String.Empty;


	protected override async Task OnInitializedAsync()
	{
		//TODO: make false in prod
		_dataFetched = true;

		//await fetchData();

		//just for testing
		TeamDT testTeam = new()
			{
				Id = 0,
				Name = "Шлошим",
				SumPoints = 42,
				CreateDate = DateTime.Now,
				CreateUserId = 1,
				UpdateDate = DateTime.Now,
				UpdateUserId = 1,
				StatusId = (int)Status.Active
			};

		teams.Add(testTeam);
	}

	public async Task fetchData()
	{
		Console.WriteLine("Fetching data...");

		_dataFetched = true;
		//users = await CompetitionService.GetAllCompetitionsAsync();
	}
}